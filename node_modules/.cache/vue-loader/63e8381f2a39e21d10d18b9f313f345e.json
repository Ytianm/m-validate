{"remainingRequest":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ytm/Documents/web/Vue/validate/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/ytm/Documents/web/Vue/validate/src/components/HelloWorld.vue","mtime":1575165144836},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/_stylus-loader@3.0.2@stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250cm9sIHsKICB3aWR0aDogMTAwJTsKCiAgc3BhbiB7CiAgICBkaXNwbGF5OiBibG9jazsKICB9CgogIGlucHV0IHsKICAgIHBhZGRpbmc6IDVweCAxMHB4OwogIH0KCiAgJi5pbnZhbGlkIHsKICAgIGlucHV0LCBzcGFuIHsKICAgICAgY29sb3I6ICNFQjA2MDA7CiAgICB9CgogICAgaW5wdXQgewogICAgICBib3JkZXI6IDFweCAjRUIwNjAwIHNvbGlkOwogICAgfQogIH0KCiAgJi52YWxpZCB7CiAgICBpbnB1dCwgc3BhbiB7CiAgICAgIGNvbG9yOiAjMDQ1OTI5OwogICAgfQoKICAgIGlucHV0IHsKICAgICAgYm9yZGVyOiAxcHggIzA0NTkyOSBzb2xpZDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    HelloWorld\n    <input type=\"text\" />\n    <ValidationProvider name=\"email\" rules=\"required\">\n      <div slot-scope=\"{ errors }\">\n        <input v-model=\"email\" />\n        <p>{{ errors[0] }}</p>\n      </div>\n    </ValidationProvider>\n\n    <ValidationProvider\n      name=\"field\"\n      rules=\"required\"\n      :bails=\"false\"\n      v-slot=\"{\n      classes,\n      errors\n    }\"\n    >\n      <div class=\"control\" :class=\"classes\">\n        <input type=\"text\" v-model=\"value\" />\n        <span>{{ errors[0] }}</span>\n      </div>\n    </ValidationProvider>\n  </div>\n</template>\n\n<script>\nimport { configure } from \"vee-validate\";\n\nconfigure({\n  classes: {\n    valid: \"is-valid\",\n    invalid: \"is-invalid\",\n    dirty: [\"is-dirty\", \"is-dirty\"] // multiple classes per flag!\n    // ...\n  }\n});\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      email: \"\",\n      value: \"\"\n    };\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"stylus\" scoped>\n.control {\n  width: 100%;\n\n  span {\n    display: block;\n  }\n\n  input {\n    padding: 5px 10px;\n  }\n\n  &.invalid {\n    input, span {\n      color: #EB0600;\n    }\n\n    input {\n      border: 1px #EB0600 solid;\n    }\n  }\n\n  &.valid {\n    input, span {\n      color: #045929;\n    }\n\n    input {\n      border: 1px #045929 solid;\n    }\n  }\n}\n</style>\n"]}]}