{"remainingRequest":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ytm/Documents/web/Vue/validate/src/form/m-form-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ytm/Documents/web/Vue/validate/src/form/m-form-item.vue","mtime":1575213213656},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTY2hlbWEgZnJvbSAiYXN5bmMtdmFsaWRhdG9yIjsKZXhwb3J0IGRlZmF1bHQgewogIGluamVjdDogWyJmb3JtIl0sIC8vIOazqOWFpWZvcm0gIOiOt+WPluWIsCBmb3JtIOeahCBtb2RlbCDku6Xlj4ogcnVsZXMKICBwcm9wczogewogICAgbGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgIHByb3A6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbGlkYXRlU3RhdHVzOiAiIiwKICAgICAgdmFsaWRhdGVNc2c6ICIiLAogICAgICBlcnJvckNsYXNzOiAnICcKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZSgpIHsKICAgICAgLy8g5L2/55SoIGFzeW5jLXZhbGlkYXRvciDov5vooYzmoKHpqowKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIGNvbnNvbGUubG9nKAogICAgICAgICAgInZhbGlkYXRlIC0tIGlucHV0IOmAmuefpeaIkeagoemqjOaVsOaNruS6hiIsCiAgICAgICAgICB0aGlzLmZvcm0ubW9kZWxbdGhpcy5wcm9wXQogICAgICAgICk7CiAgICAgICAgLy8g5qCh6aqM6KeE5YiZCiAgICAgICAgbGV0IGRlc2NyaXB0b3IgPSB7CiAgICAgICAgICBbdGhpcy5wcm9wXTogdGhpcy5mb3JtLnJ1bGVzW3RoaXMucHJvcF0KICAgICAgICB9OwoKICAgICAgICAvLyDmoKHpqozlmagKICAgICAgICBsZXQgdmFsaWRhdG9yID0gbmV3IFNjaGVtYShkZXNjcmlwdG9yKTsKCiAgICAgICAgLy8g5byA5aeL5qCh6aqM5pWw5o2uCiAgICAgICAgdmFsaWRhdG9yLnZhbGlkYXRlKAogICAgICAgICAgeyBbdGhpcy5wcm9wXTogdGhpcy5mb3JtLm1vZGVsW3RoaXMucHJvcF0gfSwKICAgICAgICAgIGVycm9yID0+IHsKICAgICAgICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZVN0YXR1cyA9ICJlcnJvciI7CiAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZU1zZyA9IGVycm9yWzBdLm1lc3NhZ2U7CiAgICAgICAgICAgICAgdGhpcy5lcnJvckNsYXNzID0gJ2lzLWVycm9yJzsKICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLnZhbGlkYXRlU3RhdHVzID0gIiI7CiAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZU1zZyA9ICIiOwogICAgICAgICAgICAgIHRoaXMuZXJyb3JDbGFzcyA9ICcnOwogICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICApOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvLyDmoKHmtYvliLDmnaXmraQgTElucHV0IOeahOajgOa1i+ivt+axggogICAgdGhpcy4kb24oInZhbGlkYXRlIiwgdGhpcy52YWxpZGF0ZSk7CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8g5oyC6L295YiwZm9ybeS4iuaXtu+8jOa0vuWPkeS4gOS4qua3u+WKoOS6i+S7tgogICAgLy8g5aaC5p6c5q2k57uE5Lu25Lyg5YWl5LqGIHByb3BzIO+8jOWImemcgOimgemAmuefpeeItue7hOS7tiDku6XmlL7lhaXmo4DmtYvmlbDnu4QKICAgIGlmICh0aGlzLnByb3ApIHsKICAgICAgdGhpcy4kcGFyZW50LiRlbWl0KCJmb3JtSXRlbUFkZCIsIHRoaXMpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["m-form-item.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"m-form-item.vue","sourceRoot":"src/form","sourcesContent":["<template>\n  <div class=\"m-form-item\" :class=\"errorClass\">\n    <label v-if=\"label\">{{label}}</label>\n    <slot></slot>\n    <span style=\"color: red\" v-if=\"validateStatus === 'error'\">{{validateMsg}}</span>\n  </div>\n</template>\n<script>\nimport Schema from \"async-validator\";\nexport default {\n  inject: [\"form\"], // 注入form  获取到 form 的 model 以及 rules\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    prop: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      validateStatus: \"\",\n      validateMsg: \"\",\n      errorClass: ' '\n    };\n  },\n  methods: {\n    validate() {\n      // 使用 async-validator 进行校验\n      return new Promise(resolve => {\n        console.log(\n          \"validate -- input 通知我校验数据了\",\n          this.form.model[this.prop]\n        );\n        // 校验规则\n        let descriptor = {\n          [this.prop]: this.form.rules[this.prop]\n        };\n\n        // 校验器\n        let validator = new Schema(descriptor);\n\n        // 开始校验数据\n        validator.validate(\n          { [this.prop]: this.form.model[this.prop] },\n          error => {\n            if (error) {\n              this.validateStatus = \"error\";\n              this.validateMsg = error[0].message;\n              this.errorClass = 'is-error';\n              resolve(false);\n            } else {\n              this.validateStatus = \"\";\n              this.validateMsg = \"\";\n              this.errorClass = '';\n              resolve(true);\n            }\n          }\n        );\n      });\n    }\n  },\n  created() {\n    // 校测到来此 LInput 的检测请求\n    this.$on(\"validate\", this.validate);\n  },\n  mounted() {\n    // 挂载到form上时，派发一个添加事件\n    // 如果此组件传入了 props ，则需要通知父组件 以放入检测数组\n    if (this.prop) {\n      this.$parent.$emit(\"formItemAdd\", this);\n    }\n  }\n};\n</script>"]}]}