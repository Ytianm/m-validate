{"remainingRequest":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ytm/Documents/web/Vue/validate/src/form/m-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ytm/Documents/web/Vue/validate/src/form/m-form.vue","mtime":1575172483497},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ytm/Documents/web/Vue/validate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm92aWRlKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybTogdGhpcwogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBtb2RlbDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgcnVsZXM6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsZXM6IFtdCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8g57yT5a2Y6ZyA6KaB5qCh6aqM55qE6KGo5Y2V6aG5CiAgICB0aGlzLiRvbigiZm9ybUl0ZW1BZGQiLCBpdGVtID0+IHRoaXMuZmlsZXMucHVzaChpdGVtKSk7CiAgICBjb25zb2xlLmxvZyh0aGlzLmZpbGVzKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWwhkZvcm1JdGVt5pWw57uE6L2s5o2i5Li6IHZhbGlkYXRlKCkg6L+U5Zue55qEcHJvbWlzZeaVsOe7hAogICAgLy8g6LCD55SoIExGb3JtIOe7hOS7tueahCB2YWxpZGF0ZSDmlrnms5Xlj6/ku6XlvpfliLDooajljZXmlbDmja7moKHpqoznmoTnu5PmnpwKICAgIGFzeW5jIHZhbGlkYXRlKGNhbGxiYWNrKSB7CiAgICAgIGxldCB0YXNrcyA9IHRoaXMuZmlsZXMubWFwKGl0ZW0gPT4gaXRlbS52YWxpZGF0ZSgpKTsKICAgICAgY29uc29sZS5sb2codGFza3MpOwoKICAgICAgLy8g6I635Y+W5omA5pyJ57uT5p6c57uf5LiA5aSE55CGCiAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbCh0YXNrcyk7CgogICAgICBsZXQgcmV0ID0gdHJ1ZTsKICAgICAgcmVzdWx0cy5mb3JFYWNoKHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXQgPSBmYWxzZTsgLy8g5Y+q6KaB5LiA5Liq5aSx6LSl5bCx5aSx6LSlCiAgICAgICAgfQogICAgICB9KTsKICAgICAgY2FsbGJhY2socmV0KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["m-form.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"m-form.vue","sourceRoot":"src/form","sourcesContent":["<template>\n  <form>\n    <slot></slot>\n  </form>\n</template>\n<script>\nexport default {\n  provide() {\n    return {\n      form: this\n    };\n  },\n  props: {\n    model: {\n      type: Object,\n      required: true\n    },\n    rules: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      files: []\n    }\n  },\n  created() {\n    // 缓存需要校验的表单项\n    this.$on(\"formItemAdd\", item => this.files.push(item));\n    console.log(this.files);\n  },\n  methods: {\n    // 将FormItem数组转换为 validate() 返回的promise数组\n    // 调用 LForm 组件的 validate 方法可以得到表单数据校验的结果\n    async validate(callback) {\n      let tasks = this.files.map(item => item.validate());\n      console.log(tasks);\n\n      // 获取所有结果统一处理\n      const results = await Promise.all(tasks);\n\n      let ret = true;\n      results.forEach(valid => {\n        if (!valid) {\n          ret = false; // 只要一个失败就失败\n        }\n      });\n      callback(ret);\n    }\n  }\n};\n</script>"]}]}